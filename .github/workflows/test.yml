name: Python package

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # setup python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # setup poetry
      - name: Setup poetry
        run: |
          pip install -U poetry
          poetry --version
      - name: Cache Venv
        uses: actions/cache@v2
        with:
          path: .venv
          key: poetry-${{ hashFiles('pyproject.toml') }}-${{ matrix.python-version }}
      - name: Set poetry config
        run: |
          poetry config virtualenvs.in-project true
          poetry run pip install -U pip

      # setup project
      - name: Install dependencies
        run: poetry install

      # tests
      - name: Check format
        run: poetry run black --check --diff tuat_feed tests
      - name: Run tests
        run: poetry run pytest -v

  test-more:
    needs: test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.9, "3.10"]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # setup python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: poetry-${{ runner.os }}-${{ matrix.python-version }}

      # setup poetry
      - name: Setup poetry
        run: |
          pip install -U poetry
          poetry --version
      - name: Cache Venv
        uses: actions/cache@v2
        with:
          path: .venv
          key: poetry-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            poetry-${{ runner.os }}-${{ matrix.python-version }}-
      - name: Set poetry config
        run: |
          poetry config virtualenvs.in-project true
          poetry run pip install -U pip

      # setup project
      - name: Install dependencies
        run: poetry install

      # tests
      - name: Check format
        run: poetry run black --check --diff tuat_feed tests
      - name: Run tests
        run: poetry run pytest -v

name: Python package

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9, "3.10"]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Cache Poetry
        uses: actions/cache@v2
        with:
          path: |
            ~/.local/share/pypoetry
            ~/.local/bin/poetry
          key: pip-${{ hashFiles('pyproject.toml') }}-${{ matrix.python-version }}
      - name: Cache Venv
        uses: actions/cache@v2
        with:
          path: .venv
          key: poetry-${{ hashFiles('pyproject.toml') }}-${{ matrix.python-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Update poetry
        run: poetry self update
      - name: Show poetry version
        run: poetry --version
      - name: Set poetry config
        run: |
          poetry config virtualenvs.in-project true
          poetry run pip install -U pip
      - name: Install dependencies
        run: poetry install
      - name: Check format
        run: poetry run black --check --diff tuat_feed tests
      - name: Run tests
        run: poetry run pytest -v
